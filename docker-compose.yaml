version: "3.9"
services:

  ###### name service ######
  # (note: you can create multiple)
  gstdocker_service:

    #### name image  & container ####
    image: pwolfe854/${CONTAINER_NAME}:${ARCH}_nogpu
    container_name: ${CONTAINER_NAME}

    #### command to keep container alive ####
    # copied into /usr/local/bin on build
    # command: custom_starting_script.sh ${ENABLE_SSH}
    command: tail -F /dev/null

    #### build Dockerfile and pass build args ####
    build:
      context: .
      dockerfile: Dockerfile
      args:
        FROM_IMG: ${FROM_IMG}
        ENABLE_SSH: ${ENABLE_SSH}

    #### volumes and mappings ####
    volumes:
      ## volumes ##
      # - root:/root/
      # - consider adding the .engine models here after conversion for saving time on launch

      ## mappings ##
      # - /tmp/.X11-unix/:/tmp/.X11-unix # x11
      # - ~/.ssh:/root/.ssh:ro # ssh folder from host
      
      ## development folder mappings here ##
      - ./examples:${WORKDIR}/examples
      - ./helper_scripts:${WORKDIR}/helper_scripts

    #### port mapping ####
    ports:
      - "127.0.0.1:6969:6969/udp"
      - "127.0.0.1:6942:6942/udp"
      # - target: 6969
      #   published: 6969
      #   protocol: udp
      #   mode: host

    #### environmental variables to set inside the container ####
    # environment:
    #   - DISPLAY=$DISPLAY
    #   PATH_ADD: /opt/nvidia/deepstream/deepstream-6.0/bin # you can append this to bashrc using dockerfile
        
    #### uncomment to start container on boot ####
    # restart: always

    #### container directory to start in ####
    working_dir: ${WORKDIR}
    
#### create volumes here ####
# volumes:
#   root:
#   /opt/nvidia/deepstream/deepstream-6.0/samples/models/